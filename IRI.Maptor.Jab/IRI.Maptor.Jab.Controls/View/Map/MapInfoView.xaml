<userControl:NotifiableUserControl x:Class="IRI.Maptor.Jab.Controls.View.MapInfoView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mahApp="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
        xmlns:userControl="clr-namespace:IRI.Maptor.Jab.Common;assembly=IRI.Maptor.Jab.Common"
        xmlns:local="clr-namespace:IRI.Maptor.Jab.Controls" x:Name="root"                   
        xmlns:system="clr-namespace:System;assembly=netstandard">
    <userControl:NotifiableUserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/IRI.Maptor.Jab.Common;component/Assets/IRI.Converters.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style  TargetType="{x:Type Button}" x:Key="circleButton">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Margin="1" Fill="{TemplateBinding Property=Background}"/>
                                <ContentPresenter/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"  />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style  TargetType="{x:Type ToggleButton}" x:Key="simpleToggle">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Rectangle Margin="1" Fill="{TemplateBinding Property=Background}"/>
                                <ContentPresenter Margin="4,1"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style  TargetType="{x:Type ToggleButton}" x:Key="circleToggle">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent2}"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>
                                <Ellipse Margin="1" Fill="{TemplateBinding Property=Background}"/>
                                <ContentPresenter/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="White"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="Margin" Value="8"/>
                <Setter Property="FlowDirection" Value="LeftToRight"/>
            </Style>
            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="mahApp:HeaderedControlHelper.HeaderFontSize" Value="12" />
            </Style>
        </ResourceDictionary>
    </userControl:NotifiableUserControl.Resources>
    <Border CornerRadius="15" BorderThickness="3" MinWidth="420" VerticalAlignment="Top" HorizontalAlignment="Center" 
                    Background="White" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}" Opacity=".95"
                    Margin="4" Visibility="{Binding IsDrawEditMeasureMode, Converter={StaticResource boolToVisibilityConverter}}">
        <StackPanel FlowDirection="{Binding ElementName=root, Path=CurrentFlowDirection}">
            <DockPanel Margin="0" >
                <TextBlock DockPanel.Dock="Left" Text="X" Margin="4"
                           Visibility="{Binding MapPanel.Options.IsManualInputAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <!--<TextBox DockPanel.Dock="Left" Text="{Binding MapPanel.CurrentEditingPoint.X, Mode=TwoWay}" MaxWidth="90"
                         FlowDirection="LeftToRight" MinWidth="80" Margin="2" VerticalAlignment="Center">-->
                <TextBox DockPanel.Dock="Left" MaxWidth="90" FlowDirection="LeftToRight" MinWidth="80" Margin="2" VerticalAlignment="Center"
                         Visibility="{Binding MapPanel.Options.IsManualInputAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MapPanel.IsGeodeticWgs84EditingMode}" Value="True">
                                    <Setter Property="Text" Value="{Binding Path=MapPanel.CurrentEditingPoint.X, Mode=TwoWay, StringFormat={}{0:N5}}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MapPanel.IsGeodeticWgs84EditingMode}" Value="False">
                                    <Setter Property="Text" Value="{Binding Path=MapPanel.CurrentEditingPoint.X, Mode=TwoWay, StringFormat={}{0:N2}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>

                <TextBlock DockPanel.Dock="Left" Text="Y" Margin="4"
                           Visibility="{Binding MapPanel.Options.IsManualInputAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}"/>
                <TextBox DockPanel.Dock="Left" MaxWidth="90" FlowDirection="LeftToRight" MinWidth="80" Margin="2" VerticalAlignment="Center"
                         Visibility="{Binding MapPanel.Options.IsManualInputAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MapPanel.IsGeodeticWgs84EditingMode}" Value="True">
                                    <Setter Property="Text" Value="{Binding Path=MapPanel.CurrentEditingPoint.Y, Mode=TwoWay, StringFormat={}{0:N5}}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MapPanel.IsGeodeticWgs84EditingMode}" Value="False">
                                    <Setter Property="Text" Value="{Binding Path=MapPanel.CurrentEditingPoint.Y, Mode=TwoWay, StringFormat={}{0:N2}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Resources>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </TextBox.Resources>
                </TextBox>


                <!--Drawing-->
                <DockPanel DockPanel.Dock="Right" LastChildFill="False"
                            Visibility="{Binding IsDrawMode, Converter={StaticResource boolToVisibilityConverter}}">
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Left" Margin="2" 
                            ToolTip="{Binding ElementName=root, Path=AddPointText}"
                            Command="{Binding AddPointToNewDrawingCommand}"
                            Visibility="{Binding MapPanel.Options.IsManualInputAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarAdd}"/>
                    </Button>
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Left" Margin="2,0,10,0" 
                        ToolTip="{Binding ElementName=root, Path=FinishDrawingPartText}"
                        Command="{Binding FinishDrawingPartCommand}"
                            Visibility="{Binding MapPanel.Options.IsMultiPartSupportAvailable, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarCheckmark}"/>
                    </Button>

                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" Margin="2" 
                        ToolTip="{Binding ElementName=root, Path=FinishDrawingText}"
                        Command="{Binding FinishNewDrawingCommand}" >
                        <Path Data="{StaticResource appbarCheck}"/>
                    </Button>
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" Margin="2" 
                        ToolTip="{Binding ElementName=root, Path=CancelDrawingText}"
                        Command="{Binding CancelNewDrawingCommand}" >
                        <Path Data="{StaticResource appbarClose}"/>
                    </Button>
                </DockPanel>
                <!-- Drawing -->


                <!--Editing-->
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right" 
                            DataContext="{Binding CurrentEditingLayer}"
                            Visibility="{Binding IsEditMode, Converter={StaticResource boolToVisibilityConverter}}">
                    <ToggleButton Style="{StaticResource circleToggle}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            IsChecked="{Binding Options.IsEdgeLabelVisible, Mode=TwoWay}" Visibility="{Binding Options.IsMeasureButtonVisible, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarMeasureMeter}"/>
                    </ToggleButton>

                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding DeleteCommand}" Visibility="{Binding Options.IsDeleteButtonVisible, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarDelete}"/>
                    </Button>

                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding ConvertToDrawingItemCommand}" Visibility="{Binding Options.IsMeasureButtonVisible, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarVectorPenAdd}"/>
                    </Button>
                    
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding CancelEditingCommand}" Visibility="{Binding Options.IsCancelButtonVisible, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}" >
                        <Path Data="{StaticResource appbarClose}"/>
                    </Button>
                    <Button Style="{StaticResource circleButton}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="2" 
                            Command="{Binding FinishEditingCommand}" Visibility="{Binding Options.IsFinishButtonVisible, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}">
                        <Path Data="{StaticResource appbarCheck}"/>
                    </Button>
                </StackPanel>
                <!--Editing-->

            </DockPanel>


            <TextBlock Text="{Binding ElementName=root, Path=NewDrawingText}" VerticalAlignment="Center" Margin="8,0" Foreground="{StaticResource  MahApps.Brushes.Accent2}"
                        Visibility="{Binding IsDrawMode, Converter={StaticResource boolToVisibilityConverter}}" HorizontalAlignment="Center" TextDecorations="Underline"/>
            <StackPanel >
                <StackPanel.Visibility>
                    <MultiBinding Converter="{StaticResource multiBooleanToVisibilityConverter}">
                        <Binding Path="MapPanel.Options.IsOptionsAvailable"/>
                        <Binding Path="MapPanel.IsDetailsVisible"/>
                    </MultiBinding>
                    <!--Visibility="{Binding MapPanel.IsDetailsVisible, Converter={StaticResource boolToVisibilityConverter}}"-->
                </StackPanel.Visibility>
                <TabControl SelectedIndex="2" Background="Transparent"  >
                    <TabControl.Items>
                        <TabItem Header="{Binding ElementName=root, Path=MapPanel_CurrentPoint}" Cursor="Hand"><!--Visibility="{Binding IsEditMode, Converter={StaticResource boolToVisibilityConverter}}">-->
                            <TabItem.Visibility>
                                <MultiBinding Converter="{StaticResource multiBooleanToVisibilityConverter}">
                                    <!--<Binding Path="IsEditMode"/>-->
                                    <Binding Path="MapPanel.Options.IsMultiPartSupportAvailable"/>
                                </MultiBinding>
                            </TabItem.Visibility>
                            <StackPanel Orientation="Horizontal" DataContext="{Binding CurrentEditingLayer}" FlowDirection="LeftToRight" HorizontalAlignment="Center">
                                <!--<CheckBox Content="نمایش ابزارهای عوارض چند تکه‌ای" 
                                  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2" Visibility="Collapsed"
                                  x:Name="showMultiPartTools" IsChecked="True"/>-->

                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="نقطه قبلی"
                                Command="{Binding GoToPreviousPointCommand}" >
                                    <Path Data="{StaticResource appbarChevronLeft}" />
                                </Button>
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="حذف نقطه"
                                Command="{Binding DeleteCurrentPointCommand}" >
                                    <Path Data="{StaticResource appbarDelete}"/>
                                </Button>
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="بزرگ‌نمایی"
                                Command="{Binding ZoomToCurrentPointCommand}" >
                                    <Path Data="{StaticResource appbarMagnifyAdd}" />
                                </Button>
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="کپی مختصات"
                                Command="{Binding CopyCurrentPointCommand}" 
                                        CommandParameter="{Binding DataContext.MapPanel.SpatialReference, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}">
                                    <Path Data="{StaticResource appbarPageCopy}" />
                                </Button>
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="نقطهٔ بعدی"
                                Command="{Binding GoToNextPointCommand}" >
                                    <Path Data="{StaticResource appbarChevronRight}"/>
                                </Button>
                            </StackPanel>
                        </TabItem>

                        <TabItem Header="{Binding ElementName=root, Path=MapPanel_MultiPart}" Cursor="Hand" ><!--Visibility="{Binding IsEditMode, Converter={StaticResource boolToVisibilityConverter}}">-->
                            <TabItem.Visibility>
                                <MultiBinding Converter="{StaticResource multiBooleanToVisibilityConverter}">
                                    <!--<Binding Path="IsEditMode"/>-->
                                    <Binding Path="MapPanel.Options.IsMultiPartSupportAvailable"/>
                                </MultiBinding> 
                            </TabItem.Visibility>
                            <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight" HorizontalAlignment="Center" DataContext="{Binding CurrentEditingLayer}" >
                              
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="حذف تکهٔ جاری"
                                Command="{Binding DeleteCurrentPartCommand}" >
                                    <Path Data="{StaticResource appbarDelete}"/>
                                </Button>

                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" IsEnabled="False"
                                    ToolTip="اضافه کردن تکهٔ جدید"
                                    Command="{Binding AddNewPartCommand}">
                                    <Path Data="{StaticResource appbarAdd}" />
                                </Button>
                                <Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="بزرگ‌نمایی روی تکهٔ جاری"
                                Command="{Binding ZoomToCurrentPartCommand}" >
                                    <Path Data="{StaticResource appbarMagnifyAdd}"/>
                                </Button>
                                <!--<Button Style="{StaticResource circleButton}" HorizontalAlignment="Right" Margin="2" 
                                ToolTip="{Binding ElementName=root, Path=CancelDrawingText}"
                                Command="{Binding CancelNewDrawingCommand}" >
                            <Path Data="{StaticResource appbarChevronRight}" />
                        </Button>-->
                            </StackPanel>
                        </TabItem>

                        <TabItem Header="{Binding ElementName=root, Path=MapPanel_Srs}" Cursor="Hand">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <RadioButton GroupName="A" ToolTip="{Binding ElementName=root, Path=GeodeticWgs84Text}" Foreground="White" Margin="4,2" 
                                     IsChecked="{Binding MapPanel.IsGeodeticWgs84EditingMode, Mode=TwoWay}" Width="Auto" Height="Auto"  
                                     HorizontalContentAlignment="Center" Style="{StaticResource simpleToggle}" >

                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0">
                                        <Path Data="{StaticResource appbarGlobe}" Height="16" Margin="2" />
                                        <TextBlock Text="WGS84" Margin="2" Foreground="White"/>
                                    </StackPanel>
                                </RadioButton>
                                <RadioButton GroupName="A" ToolTip="{Binding ElementName=root, Path=UtmText}" Foreground="White" Margin="4,2"
                                     IsChecked="{Binding MapPanel.IsUTMEditingMode, Mode=TwoWay}" Style="{StaticResource simpleToggle}" >
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0">
                                        <Path Data="{StaticResource appbarMapTreasure}" Height="16" Margin="2" />
                                        <TextBlock Text="UTM" Margin="2" Foreground="White"/>
                                    </StackPanel>
                                </RadioButton>
                                <!--<RadioButton GroupName="A" ToolTip="{Binding ElementName=root, Path=WebMercatorText}" Foreground="White" Margin="4,2"
                                     IsChecked="{Binding MapPanel.IsWebMercatorEditingMode, Mode=TwoWay}" Style="{StaticResource simpleToggle}" >
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="4,0">
                                        <Path Data="{StaticResource appbarMapTreasure}" Height="16" Margin="2" />
                                        <TextBlock Text="Web Mercator" Margin="2" Foreground="White"/>
                                    </StackPanel>
                                </RadioButton>-->
                                <TextBlock DockPanel.Dock="Left" Margin="4"
                                            Visibility="{Binding MapPanel.IsUTMEditingMode, Converter={StaticResource boolToVisibilityConverter}}"
                                            Text="{Binding ElementName=root, Path=UtmZone}"/>
                                <TextBox DockPanel.Dock="Left" BorderThickness="1" FlowDirection="LeftToRight" MinWidth="30" Margin="2" VerticalAlignment="Center"
                                            Text="{Binding MapPanel.CurrentEditingZone, Mode=TwoWay}" MaxWidth="30"
                                            Visibility="{Binding MapPanel.IsUTMEditingMode, Converter={StaticResource boolToVisibilityConverter}}">
                                    <TextBox.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>
                            </StackPanel>
                        </TabItem>
                    </TabControl.Items>
                </TabControl>

            </StackPanel>

            <Border Height="Auto" Margin="0 5 0 0" CornerRadius="0 0 13 13" 
                    Cursor="Hand" Visibility="{Binding MapPanel.Options.IsOptionsAvailable, Converter={StaticResource boolToVisibilityConverter}}">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding MapPanel.ToggleDetailsVisibilityCommand}"/>
                </Border.InputBindings>
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" Value="{DynamicResource MahApps.Brushes.Accent2}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <Path Margin="2" Height="8" Visibility="{Binding MapPanel.IsDetailsNotVisible, Converter={StaticResource boolToVisibilityConverter}}"
                            Data="M39.629,19.819l-14.63,14.63L10.37,19.819c-0.976-0.976-0.976-2.559,0-3.536c0.976-0.976,2.559-0.976,3.536,0l11.093,11.093l11.095-11.094c0.977-0.976,2.56-0.976,3.536,0C40.606,17.259,40.606,18.842,39.629,19.819z"/>
                    <Path Margin="2" Height="8" Visibility="{Binding MapPanel.IsDetailsVisible, Converter={StaticResource boolToVisibilityConverter}}"
                            Data="M39.631,33.716c-0.976,0.977-2.56,0.977-3.535,0L25.001,22.621L13.904,33.717c-0.488,0.487-1.128,0.731-1.768,0.731c-0.64,0-1.28-0.244-1.768-0.731c-0.976-0.978-0.976-2.56,0-3.536L25,15.551l14.63,14.629C40.608,31.156,40.608,32.739,39.631,33.716z"/>
                </StackPanel>
            </Border>
        </StackPanel>
    </Border>
</userControl:NotifiableUserControl>
