<UserControl x:Class="IRI.Jab.Controls.View.Map.MapLegendItemWithOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IRI.Jab.Controls.View.Map" x:Name="root"
             xmlns:model="clr-namespace:IRI.Jab.Controls.Model.Legend">
    <Grid IsEnabled="{Binding ElementName=root, Path=Symbology.IsInScaleRange}">
        <Grid.Resources>
            <!--<DataTemplate x:Key="toggleButonCommand">
                <ToggleButton VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding Command}" BorderThickness="0" Focusable="False" 
                                  Background="Transparent" IsChecked="{Binding IsSelected, Mode=TwoWay}">
                    <Path Data="{Binding PathMarkup}" Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Width="16" Height="16"/>
                </ToggleButton>
            </DataTemplate>
            <DataTemplate x:Key="buttonCommand">
                <Button VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding Command}" BorderThickness="0" Focusable="False" Background="Transparent">
                    <Path Data="{Binding PathMarkup}" Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Width="16" Height="16"/>
                </Button>
            </DataTemplate>-->
            <DataTemplate DataType="{x:Type model:LegendToggleCommand}">
                <ToggleButton VerticalAlignment="Center" Margin="1" Cursor="Hand" BorderThickness="0" Focusable="False" 
                                  Background="Transparent" IsChecked="{Binding IsSelected, Mode=TwoWay}">
                    <Path Data="{Binding PathMarkup}" Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Width="16" Height="16"/>
                </ToggleButton>
            </DataTemplate>
            <DataTemplate DataType="{x:Type model:LegendCommand}">
                <Button VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding Command}" BorderThickness="0" Focusable="False" Background="Transparent">
                    <Path Data="{Binding PathMarkup}" Stretch="Uniform" Fill="{DynamicResource AccentColorBrush}" Width="16" Height="16"/>
                </Button>
            </DataTemplate>
            
            <model:CommandDataTemplateSelector x:Key="commandDataTemplateSelector"/>
        </Grid.Resources>
        <!--<Grid.Resources>
            <Style TargetType="ToggleButton">
                <Setter Property="BorderThickness" Value="0"/>
                -->
        <!--<Setter Property="Cursor" Value="Hand"/>-->
        <!--
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                        -->
        <!--<Setter Property="Foreground" Value="White"/>-->
        <!--
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}" />
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <RadioButton Margin="2" Style="{StaticResource {x:Type ToggleButton}}" BorderThickness="0" HorizontalAlignment="Stretch" IsChecked="True"
                     >-->

        <StackPanel HorizontalAlignment="Stretch" Margin="0">
            <StackPanel Orientation="Horizontal" >
                <CheckBox Margin="4" IsChecked="{Binding ElementName=root, Path=Symbology.Visibility, Mode=TwoWay, Converter={StaticResource visibilityToBoolConverter}}"/>
                <Slider VerticalAlignment="Center" Width="50" Minimum="0" Maximum="1" SmallChange=".1" LargeChange=".2" TickFrequency=".2" Value="{Binding ElementName=root, Path=Symbology.Opacity, Mode=TwoWay}"/>
                <TextBlock Text="{Binding ElementName=root, Path=LayerName}" MinWidth="70" VerticalAlignment="Center" Margin="4"/>
            </StackPanel>
            <ItemsControl Visibility="{Binding IsChecked, ElementName=root, Converter={StaticResource boolToVisibilityConverter}}" BorderBrush="Black" BorderThickness="0,0,0,0"
                            Padding="0,0,0,6" ItemsSource="{Binding ElementName=root, Path=Commands}" >
                <!--<ItemsControl.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderThickness" Value="0"/> 
                    </Style>
                </ItemsControl.Resources>-->
                <!--<ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>-->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </StackPanel>
        <!--</RadioButton>-->
    </Grid>
</UserControl>
