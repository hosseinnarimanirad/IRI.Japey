<userControl:NotifiableUserControl x:Class="IRI.Maptor.Jab.Controls.View.MapDrawingLegendView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:userControl="clr-namespace:IRI.Maptor.Jab.Common;assembly=IRI.Maptor.Jab.Common" 
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
                mc:Ignorable="d"  x:Name="root"
                xmlns:iriJabControls="clr-namespace:IRI.Maptor.Jab.Controls.View" >
    <Grid>
        <Grid.Resources>
            <Style  TargetType="{x:Type Button}" x:Key="menuCircleButton">
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                <Setter Property="Width" Value="32"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Ellipse Margin="1" Fill="{TemplateBinding Property=Background}"/>
                                <ContentPresenter/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type iconPacks:PackIconModern}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Width" Value="16"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" 
                    Visibility="{Binding ElementName=root, Path=ShowTools, Converter={StaticResource boolToVisibilityConverter}}">

            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding RemoveAllDrawingItemsCommand}"  
                        BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=RemoveAllDrawingItemsLabel}">
                <!--<Path Data="{StaticResource appbarDelete}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>-->
                <iconPacks:PackIconModern Kind="VectorPen" />
            </Button>
            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding AddGeoJsonToDrawingItemsCommand}"  
                        BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=AddGeoJsonToDrawingItemsLabel}">
                <Path Data="{StaticResource json}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>
            </Button>
            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="1" Cursor="Hand" Command="{Binding AddLongLatTxtToDrawingItemsCommand}"  
             BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=AddLongLatTxtToDrawingItemsLabel}">
                <Path Data="{StaticResource txt}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>
            </Button>
            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="01" Cursor="Hand" Command="{Binding AddShapefileToDrawingItemsCommand}"  
                        BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=AddShapefileToDrawingItemsLabel}">
                <Path Data="{StaticResource shapefile}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>
            </Button>
            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="01" Cursor="Hand" Command="{Binding MoveDrawingItemDownCommand}"  
                        BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=MoveDrawingItemDownLabel}" IsEnabled="{Binding CanMoveDrawingItemDown}">
                <!--<Path Data="{StaticResource appbarLayerDown}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>-->
                <iconPacks:PackIconModern Kind="LayerDown" />
            </Button>
            <Button Style="{StaticResource menuCircleButton}" VerticalAlignment="Center" Margin="01" Cursor="Hand" Command="{Binding MoveDrawingItemUpCommand}"  
                        BorderThickness="0" Focusable="False" ToolTip="{Binding ElementName=root, Path=MoveDrawingItemUpLabel}" IsEnabled="{Binding CanMoveDrawingItemUp}">
                <!--<Path Data="{StaticResource appbarLayerUp}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>-->
                <Path Data="{StaticResource appbarLayerUp}" Stretch="Uniform" Fill="White" Width="18" Height="18" FlowDirection="LeftToRight"/>
            </Button>
        </StackPanel>
        <Line Grid.Row="1" X1="0" X2="100" StrokeThickness="2" Stroke="{DynamicResource MahApps.Brushes.Accent}" 
              Visibility="{Binding ElementName=root, Path=ShowTools, Converter={StaticResource boolToVisibilityConverter}}"
              Opacity="1" Margin="0,4"
              Stretch="Fill"/>
        <ListBox Grid.Row="2" ItemsSource="{Binding DrawingItems}" SelectionMode="Single" SelectedItem="{Binding SelectedDrawingItem}">
            <ListBox.Resources>
                <Style TargetType="ToggleButton">
                    <Setter Property="BorderThickness" Value="4,0,0,0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">

                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemContainerStyle>
                <!-- Style to get rid of the selection visual -->
                <Style TargetType="{x:Type ListBoxItem}">
                    <!--<Style.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="IsSelected" Value="True"/>
                        </Trigger>
                    </Style.Triggers>-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <RadioButton Style="{StaticResource {x:Type ToggleButton}}" GroupName="{Binding ElementName=root, Path=GroupName}" DataContext="{Binding }"
                                 IsChecked="{Binding IsSelectedInToc, Mode=TwoWay}">
                        <!--<i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding ToggleSelectedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>-->
                        <iriJabControls:MapLegendItemWithOptionsView Title="{Binding LayerName, Mode=TwoWay}" Symbology="{Binding VisualParameters}"  
                                                                     IsEditable="True" Commands="{Binding Commands}" 
                                                                     IsChecked="{Binding IsSelectedInToc}"
                                                                     TitleFontSize="{Binding ElementName=root, Path=TitleFontSize}"/>
                        <!--<iriJabControls:MapLegendItemWithOptionsView Title="{Binding Title}" Symbology="{Binding VisualParameters}"  
                                                                     IsEditable="True" Commands="{Binding Commands}" 
                                                                     IsChecked="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>-->


                        <!--<StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Title, Mode=TwoWay}" VerticalAlignment="Center" />
                            <Button Grid.Column="2" Command="{Binding EditCommand}" Style="{StaticResource circleButton}">
                                <Path Fill="White" Data="{StaticResource appbarEdit}" Stretch="Uniform" Margin="8"/>
                            </Button>
                            <Button Grid.Column="3" Command="{Binding RemoveCommand}" Style="{StaticResource circleButton}" >
                                <Path Fill="White" Data="{StaticResource appbarDelete}" Stretch="Uniform" Margin="8"/>
                            </Button>
                            <Button Grid.Column="3" Command="{Binding ZoomCommand}" Style="{StaticResource circleButton}" >
                                <Path Fill="White" Data="{StaticResource appbarMagnify}" Stretch="Uniform" Margin="8"/>
                            </Button>
                        </StackPanel>-->
                    </RadioButton>

                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</userControl:NotifiableUserControl>
